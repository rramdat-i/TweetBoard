<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <title>TweetBoard</title>
  <style type="text/css" media="screen">
    body {
      margin: 0;
      padding: 0;
      font-family: 'Segoe UI Web Light', 'Segoe UI Light', 'Segoe UI Web Regular', 'Segoe UI', 'Helvetica Neue', Arial;
    }
    .leftcol { float: left; }
    .rightcol { float: right; }
    .clearfix:after {
      content: ".";
      display: block;
      height: 0;
      clear: both;
      visibility: hidden;
    }
    .tbtitle {
      margin-left: 40px;
      padding: 20px 0 15px 40px;
      width: 600px;
      background-color:#f89a1e;
      font-size: 52px;
      color: #fff;
    }
    .tblatest {
      margin: 45px 0 0 40px;
      padding: 20px;
      width: 450px;
      height: 160px;
      background-color: #1EBAED;
      color: #fff;
    }
    .tblatest-body .avatarpic { float: left; padding-top: 7px; padding-right: 19px; }
    .tblatest-body .tweetbody { height: 125px; margin-left: 68px; padding-bottom: 15px; }
    .tblatest-body .timeago { font-size: 0.8em; }
    .tblatest-body .screenname {
      font-size: 1.17em;
      margin: 0 0 19px 0;
      display: block;
    }
    .tbmessage {
      margin-right: 30px;
      width: 320px;      
      color: #f89a1e;
      font-size: 48px;
    }
    .tbmatrix {
      clear: both;
      margin: 70px 0 20px 40px;
    }
    .tweetcard {
      float: left;
      width: 340px;
      height: 160px;
      background-color: #1EBAED;
      margin: 0 10px 10px 0;
      padding: 10px;
      color: #fff;
    }
    .blankcard, .facedown {
      background-color: #78D6F5;
    }
    .facedown div, .facedown span, .facedown p {
      visibility: hidden;
    }
    @keyframes rotateIn {
        0%{
            background-color: #78D6F5;
            transform:  rotateX(0deg);
        }
        100%{
            transform:  rotateX(180deg);
            background-color: #1EBAED;
        }
    }
    @-webkit-keyframes rotateIn {
        0%{
            background-color: #78D6F5;
            -webkit-transform:  rotateX(0deg);
        }
        100%{
            -webkit-transform:  rotateX(180deg);
            background-color: #1EBAED;
        }
    }      
    @keyframes rotateOut {
        0%{
            background-color: #1EBAED;
            transform:  rotateX(0deg);
        }
        100%{
            transform:  rotateX(180deg);
            background-color: #78D6F5;
        }
    }
    @-webkit-keyframes rotateOut {
        0%{
            background-color: #1EBAED;
            -webkit-transform:  rotateX(0deg);
        }
        100%{
            -webkit-transform:  rotateX(180deg);
            background-color: #78D6F5;
        }
    }
    .animatein {
      animation: rotateIn 1s ease-in 1 normal;
      -webkit-animation: rotateIn 1s ease-in 1 normal;       
    }
    .animateout {
      animation: rotateOut 1s ease-in 1 normal;
      -webkit-animation: rotateOut 1s ease-in 1 normal;
    }
    .tweetcard .screenname { font-size: 1.1em; margin: 0 0 19px 0; display: inline-block; }
    .tweetcard p { font-size: 1em; height: 75px; }
    .tweetcard .time { font-size: .6em; }
    .tweet, .hide, .tweetcard .hide { display: none; }
  </style>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js" type="text/javascript"></script>
  <script src="jquery.tweet.js" charset="utf-8" type="text/javascript"></script>
</head>
<body>
  <div class="topfold clearfix">
    <div class="leftcol">
      <div class="tbtitle">
        Live Tweets
      </div>
      <div class="tblatest"><div class="tblatest-body"></div></div>
    </div>
    <div class="rightcol tbmessage">
      Welcome NRF Send us your tweets #MSNRF2013
    </div> 
  </div>
  <div class="tbmatrix clearfix"></div>
  <div class="tweet"></div>
  <script type="text/javascript">
    var latestTweetId = "",
        matrix = null,
        matrixSize = 12,
        minBlank = 3,
        avatarSize = 48,
        maxTweets = 10,
        refreshInterval = 20;

    function animateIn(tweet) {
      var delay = Math.floor((Math.random() * 5000) + 3200);
      setTimeout(function () {
        if (matrix && matrix.length == matrixSize) {
          var len = $('.blankcard').length;

          if (len > 0) {
            var spot = Math.floor((Math.random() * len) + 0);
            var idx = $('.blankcard').eq(spot).index();

            $('.blankcard').eq(spot).replaceWith(tweet.tweetcard);
            $('.tweetcard').eq(idx).addClass('animatein');
            $('.tweetcard').eq(idx).removeClass('facedown');

            setTimeout(function () {
              $('.tweetcard').eq(idx).children().fadeIn(500);
              $('.tweetcard').eq(idx).removeClass('animatein');
            }, 1100);

            matrix[idx] = tweet.tweet_id;

            console.log('Add new card to matrix at: ' + idx);
          }
        }
      }, delay);
    }

    function animateOut(spot) {
      var delay = Math.floor((Math.random() * 3000) + 500);
      setTimeout(function () {
        $('.tbmatrix').children().eq(spot).children().fadeOut(1000, function () {
          $('.tbmatrix').children().eq(spot).empty();
        });

        $('.tbmatrix').children().eq(spot).addClass('animateout blankcard');

        matrix[spot] = '_blank';
      }, delay);
    }

    function setLatestTweet(tweet) {
      if (tweet && latestTweetId != tweet.tweet_id) {
        latestTweetId = tweet.tweet_id;

        $('.tblatest-body').fadeOut(500, function () {
          $('.tblatest-body').empty();
          $('.tblatest-body').append(tweet.latest);
          $('.tblatest-body').fadeIn(500);
        });
      }
    }

    function initializeMatrix() {
      $('.tbmatrix').empty();

      matrix = [];

      for (var i = 0; i < matrixSize; i++) {
        $('.tbmatrix').append('<div class="tweetcard blankcard"></div>');
        matrix.push('_blank');
      }

      jQuery(function ($) {
        $(".tweet").tweet({
          avatar_size: avatarSize,
          count: maxTweets,
          refresh_interval: refreshInterval,
          query: "#my2k",
          loading_text: "loading tweets..."
        })
        .bind({
          "loaded": function (e, tweets) {
            if (tweets.length > 0) setLatestTweet(tweets[0]);

            // remove old items off matrix
            for (var i = 0; i < matrix.length; i++) {
              var twid = matrix[i], keeper = false;

              for (var j = 1; j < tweets.length; j++) {
                if (twid === tweets[j].tweet_id) {
                  keeper = true;
                  break;
                }
              }

              if (keeper) {
                // leave item on matrix
                continue;
              }
              else {
                // animate item out
                animateOut(i);
              }
            }
            // add new items to matrix
            for (var k = 1; k < tweets.length; k++) {
              var twid = tweets[k].tweet_id, added = false, newMatrixItems = 0;

              for (var l = 0; l < matrix.length; l++) {
                if (twid === matrix[l]) {
                  added = true;
                  break;
                }
              }

              if (added) {
                // item on matrix
                continue;
              }
              else {
                // add item to matrix
                if (newMatrixItems < ((matrixSize - minBlank) + 1)) {
                  animateIn(tweets[k]);
                  newMatrixItems++;
                }
              }
            }
          }
        });
      });
    }
    initializeMatrix();
  </script>
</body>
</html>